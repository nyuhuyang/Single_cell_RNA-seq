"# Nobody will read this, except me."							
							
"# Here is the journey recording the way of someone like me, growing from a little potato into a little bigger potato."							
							
#---------2017/6/6------------							
I have difficulty to reproduct the code in monocle manual							
HSMM<-estimateDispersions(HSMM)							
disp_table <- dispersionTable(HSMM)							
							
"I updata OS, R and R studio, didn't work."							
Finally I realize Ctrapnell mentioned this in his github that:							
ctrapnell commented on Jun 7 2016							
 estimateDispersions only makes sense right now for negbinomial and negbinomial.size expression families.							
							
https://github.com/cole-trapnell-lab/monocle-release/issues/5							
							
So I can changed expressionFamily=negbinomial.size() and add  lowerDetectionLimit=0.5 while build newCellData							
It works.							
							
#---------2017/6/9------------							
							
ggplot tricks:							
text = element_text(size=40)     #larger text including legend title							
legend.text = element_text(size=30)) #larger legend text							
legend.key.size = unit(2, "cm") #legend height and width
legend.key.width = unit(2, "cm") #legend width
legend.key.height = unit(2, "cm") #legend height
legend.position="none" #remove legend
							
"unit(2, ""cm"")   or grid::unit(1, "in")
							
"legend.justification = 'right',"							
"legend.position=c(0.3,0.82) # change legend position, c() can be negative!"							
guides(colour = guide_legend(override.aes = list(size=10))) #larger legend label							
							
#To control the order and color, change the factor levels to (Epi,Endo, Immune)"
pData(HSMM_3)$CellType <-factor(pData(HSMM_3)$CellType,levels=c("KRT19+ epithelial Cells",
"Stromal+\nEndothelial+\nFibroblasts Cells",
"Immune Cells"))

CellType and Cluster can be generated by runing reduceDimension()

Monocle sequence:
1)reduceDimension
2)clusterCells							
3)plot_cell_clusters							
							
1)reduceDimension							
2)orderCells							
3)plot_cell_trajectory							
							
#---------2017/6/10------------							
#host a Shiny Server/RStudio Server yourself							
http://deanattali.com/2015/05/09/setup-rstudio-shiny-server-digital-ocean/							
							
Step 3: Log in to your very own shiny new server							
ssh -l root 67.205.148.56  not  ssh 67.205.148.56 that mentioned in tutoiral							that mentioned in 
su - yah2014							
							
6.1: Important note re: installing R packages							
"sudo su - -c ""R -e \""install.packages('reshape', repos='http://cran.rstudio.com/')\"""""							
"sudo su - -c ""R -e \""install.packages('pheatmap', repos='http://cran.rstudio.com/')\"""""							
"sudo su - -c ""R -e \""biocLite('monocle', repos='https://bioconductor.org/biocLite.R/')\"""" didn't work"							
log in root and install inside R							
							
Shiny Server 32-bit Installation from Source							
https://www.r-bloggers.com/installing-and-running-shiny-server-from-source-on-32-bit-ubuntu/


#---------2017/6/12 Completed Monocle manual------------


Monocle manual mistake
5.2 Finding genes that distinguish cell type or state
gene UBC should be the TBP

#---------2017/6/13 Build Shiny------------
rstudio.com/products/shiny/shiny-user-showcase/
bit.ly/shiny-quickstart-2
actionButton(inputId = "go", label = "Update"),

#How to save and load S4 dataset
saveRDS(HSMM_epi_3,file = "HSMM_epi_3", ascii = T)
readRDS("HSMM_epi")

#How to generate plot in app
#when as.character turn character into number, use unlist
as.character(unlist(HSMM_ordering_genes))

#How to storage data remotely
token <- readRDS("droptoken.rds")
drop_acc(dtoken = token)
outputDir<-"/public/olivier/r/single_cell/rshiny/shinyapps/"
HSMM_ordering_genes <-drop_read_csv(paste0(outputDir,"HSMM_ordering_genes.csv"), dtoken=token)
HSMM_ordering_genes<-as.character(unlist(HSMM_ordering_genes))

drop_read_RDS <- function(file, dest = tempdir(), dtoken = get_dropbox_token(), ...) {
localfile = paste0(dest, "/", basename(file))
drop_get(file, local_file = localfile, overwrite = TRUE, dtoken = dtoken)
readRDS(localfile, ...) #copy from drop_read_csv
}
HSMM_epi_3<-drop_read_RDS(paste0(outputDir,"HSMM_epi_3"), dtoken=token)

#How to setup upload UI

#---------2017/6/14 Extract data from S4 and rebuild DESeq------------
#simpler than I thought
#while running estimateSizeFactors, the error keeps coming:
Error in estimateSizeFactorsForMatrix(counts(object), locfunc = locfunc,  :
every gene contains at least one zero, cannot compute log geometric means

#run this script:
cts <- counts(ddsHTSeq)
geoMeans <- apply(cts, 1, function(row) exp(sum(log(row[row != 0]))/length(row)))
dds <- estimateSizeFactors(ddsHTSeq, geoMeans=geoMeans)

#---------2017/6/15 multiple level of DESeq design------------
Check
https://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#contrasts
Michael I. Love, Simon Anders, and Wolfgang Huber
14 June 2017

res_cluster_2vs1 <- results(dds,contrast = c("Cluster","2","1"), alpha=0.5, lfcThreshold=1)
res_cluster_3vs1 <- results(dds,contrast = c("Cluster","3","1"), alpha=0.5, lfcThreshold=1)
res_cluster_3vs2 <- results(dds,contrast = c("Cluster","3","2"), alpha=0.5, lfcThreshold=1)

#Some useful function for S4 vector
isS4()
class?ExpressionSet
HSMM_epi_3@phenoData =phenoData(HSMM_epi_3)
new_object <- updateObject(old_object)
showMethods("as.data.frame")
getMethod("as.data.frame", "DataFrame")
method?as.data.frame,DataFrame


#---------2017/6/16 dds vs dds_results------------
#generate plotCounts plot 1:9 ggplot
#generate Rshiny


